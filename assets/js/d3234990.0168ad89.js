"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3287],{1598:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var o=t(5893),s=t(1151);const l={},i="Multi LLM APIs for Different Components",r={id:"llms/multi-llm",title:"Multi LLM APIs for Different Components",description:"In some cases, you may want to use different LLMs for different components.",source:"@site/docs/llms/multi-llm.md",sourceDirName:"llms",slug:"/llms/multi-llm",permalink:"/TaskWeaver/docs/llms/multi-llm",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/docs/llms/multi-llm.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Customized LLM API",permalink:"/TaskWeaver/docs/llms/customized_llm_api"},next:{title:"Plugin Introduction",permalink:"/TaskWeaver/docs/plugin/plugin_intro"}},a={},c=[{value:"Usage",id:"usage",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"multi-llm-apis-for-different-components",children:"Multi LLM APIs for Different Components"}),"\n",(0,o.jsx)(n.p,{children:"In some cases, you may want to use different LLMs for different components.\nFor example, you may want to use OpenAI GPT-4 for the Planner but use Google gemini-pro for the CodeInterpreter.\nIn this section, we will show you how to use different LLMs for different components."}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Configure the primary LLM and extra LLMs settings in the ",(0,o.jsx)(n.code,{children:"taskweaver_config.json"})," file under ",(0,o.jsx)(n.code,{children:"project"})," directory, just as follows:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'"llm.api_type":"openai",\n"llm.api_base": "https://api.openai.com/v1",\n"llm.api_key": "YOUR_API_KEY",\n"llm.model": "gpt-3.5-turbo-1106",\n"llm.response_format": "json_object"\n"ext_llms.llm_configs": {\n    "llm_A":\n        {\n            "llm.api_type": "openai",\n            "llm.api_base": "https://api.openai.com/v1",\n            "llm.api_key": "YOUR_API_KEY",\n            "llm.model": "gpt-4-1106-preview",\n            "llm.response_format": "json_object",\n        },\n    "llm_B":\n        {\n            "llm.api_type": "google_genai",\n            "llm.api_key": "YOUR_API_KEY",\n            "llm.model": "gemini-pro",\n        },\n},\n'})}),"\n",(0,o.jsx)(n.p,{children:"Notes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ext_llms.llm_configs"})," is a dict of extra LLMs for different components. It is an optional field. If you do not specify it, only the primary LLM will be used."]}),"\n",(0,o.jsx)(n.li,{children:"For each LLM setting, please should follow the configuration method described in each LLM configuration page."}),"\n",(0,o.jsxs)(n.li,{children:["Besides the extra LLMs, you should also configure the primary LLM settings in the ",(0,o.jsx)(n.code,{children:"taskweaver_config.json"}),", just as shown in the top 5 lines in the above code snippet."]}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["Specify the LLMs for different components in the ",(0,o.jsx)(n.code,{children:"taskweaver_config.json"}),".\nFor example, we want to use OpenAI GPT-4 for the Planner and use Google gemini-pro for the CodeInterpreter."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'"planner.llm_alias": "llm_A",\n"code_generator.llm_alias": "llm_B"\n'})}),"\n",(0,o.jsx)(n.p,{children:"Notes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If you do not specify the LLM for a component, the primary LLM will be used by default.\nIn this case, ",(0,o.jsx)(n.code,{children:"GPT-3.5-turbo-1106"})," will be used for both the Planner and the CodeInterpreter, if you do not specify the LLM for them."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>i});var o=t(7294);const s={},l=o.createContext(s);function i(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);