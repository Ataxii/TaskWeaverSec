"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6910],{3616:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>x,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var r=d(5893),s=d(1151);const c={},o="Configuration File",i={id:"configurations",title:"Configuration File",description:"The configuration file is located at project/taskweaver_config.json.",source:"@site/docs/configurations.md",sourceDirName:".",slug:"/configurations",permalink:"/TaskWeaver/docs/configurations",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/docs/configurations.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Prompt Compression",permalink:"/TaskWeaver/docs/compression"},next:{title:"Planner",permalink:"/TaskWeaver/docs/planner"}},t={},l=[];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"configuration-file",children:"Configuration File"}),"\n",(0,r.jsxs)(n.p,{children:["The configuration file is located at ",(0,r.jsx)(n.code,{children:"project/taskweaver_config.json"}),".\nYou can edit this file to configure TaskWeaver.\nThe configuration file is in JSON format. So for boolean values, use ",(0,r.jsx)(n.code,{children:"true"})," or ",(0,r.jsx)(n.code,{children:"false"})," instead of ",(0,r.jsx)(n.code,{children:"True"})," or ",(0,r.jsx)(n.code,{children:"False"}),".\nFor null values, use ",(0,r.jsx)(n.code,{children:"null"})," instead of ",(0,r.jsx)(n.code,{children:"None"})," or ",(0,r.jsx)(n.code,{children:'"null"'}),". All other values should be strings in double quotes.\nThe following table lists the parameters in the configuration file:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.model"})}),(0,r.jsx)(n.td,{children:"The model name used by the language model."}),(0,r.jsx)(n.td,{children:"gpt-4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.backup_model"})}),(0,r.jsx)(n.td,{children:"The model name used for self-correction purposes."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"null"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.api_base"})}),(0,r.jsx)(n.td,{children:"The base URL of the OpenAI API."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"https://api.openai.com/v1"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.api_key"})}),(0,r.jsx)(n.td,{children:"The API key of the OpenAI API."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"null"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.api_type"})}),(0,r.jsxs)(n.td,{children:["The type of the OpenAI API, could be ",(0,r.jsx)(n.code,{children:"openai"})," or ",(0,r.jsx)(n.code,{children:"azure"}),"."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"openai"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.api_version"})}),(0,r.jsx)(n.td,{children:"The version of the OpenAI API."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2023-07-01-preview"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.response_format"})}),(0,r.jsxs)(n.td,{children:["The response format of the OpenAI API, could be ",(0,r.jsx)(n.code,{children:"json_object"}),", ",(0,r.jsx)(n.code,{children:"text"})," or ",(0,r.jsx)(n.code,{children:"null"}),"."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"json_object"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.embedding_api_type"})}),(0,r.jsx)(n.td,{children:"The type of the embedding API"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sentence_transformers"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"llm.embedding_model"})}),(0,r.jsx)(n.td,{children:"The name of the embedding model"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"all-mpnet-base-v2"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_interpreter.code_verification_on"})}),(0,r.jsx)(n.td,{children:"Whether to enable code verification."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_interpreter.allowed_modules"})}),(0,r.jsx)(n.td,{children:"The list of allowed modules to import in code generation."}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'["pandas", "matplotlib", "numpy", "sklearn", "scipy", "seaborn", "datetime", "typing"]'}),", if the list is empty, no modules would be allowed"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_interpreter.blocked_functions"})}),(0,r.jsx)(n.td,{children:"The list of functions to block from code generation."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'["__import__", "eval", "exec", "execfile", "compile", "open", "input", "raw_input", "reload"]'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"logging.log_file"})}),(0,r.jsx)(n.td,{children:"The name of the log file."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"taskweaver.log"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"logging.log_folder"})}),(0,r.jsx)(n.td,{children:"The folder to store the log file."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"logs"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"plugin.base_path"})}),(0,r.jsx)(n.td,{children:"The folder to store plugins."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"${AppBaseDir}/plugins"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planner.example_base_path"})}),(0,r.jsx)(n.td,{children:"The folder to store planner examples."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"${AppBaseDir}/planner_examples"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planner.prompt_compression"})}),(0,r.jsx)(n.td,{children:"Whether to compress the chat history for planner."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planner.skip_planning"})}),(0,r.jsx)(n.td,{children:"Whether to skip LLM planning process and enable the default plan"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"planner.use_experience"})}),(0,r.jsx)(n.td,{children:"Whether to use experience summarized from the previous chat history in planner."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_generator.example_base_path"})}),(0,r.jsx)(n.td,{children:"The folder to store code interpreter examples."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"${AppBaseDir}/codeinterpreter_examples"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_generator.prompt_compression"})}),(0,r.jsx)(n.td,{children:"Whether to compress the chat history for code interpreter."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_generator.enable_auto_plugin_selection"})}),(0,r.jsx)(n.td,{children:"Whether to enable auto plugin selection."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_generator.use_experience"})}),(0,r.jsx)(n.td,{children:"Whether to use experience summarized from the previous chat history in code generator."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_generator.auto_plugin_selection_topk"})}),(0,r.jsx)(n.td,{children:"The number of auto selected plugins in each round."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"session.max_internal_chat_round_num"})}),(0,r.jsx)(n.td,{children:"The maximum number of internal chat rounds between Planner and Code Interpreter."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"session.code_interpreter_only"})}),(0,r.jsx)(n.td,{children:"Allow users to directly communicate with the Code Interpreter."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"session.plugin_only_mode"})}),(0,r.jsx)(n.td,{children:"Whether to enable the plugin-only mode."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"session.code_exec_mode"})}),(0,r.jsxs)(n.td,{children:["The code execution mode, could be ",(0,r.jsx)(n.code,{children:"python"}),", ",(0,r.jsx)(n.code,{children:"plugin_only"})," or ",(0,r.jsx)(n.code,{children:"cli_only"}),", which means executing python code or only executing plugin functions or CLI commands in shell."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"python"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"round_compressor.rounds_to_compress"})}),(0,r.jsx)(n.td,{children:"The number of rounds to compress."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"round_compressor.rounds_to_retain"})}),(0,r.jsx)(n.td,{children:"The number of rounds to retain."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3"})})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\ud83d\udca1 ${AppBaseDir} is the project directory."}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 Up to 11/30/2023, the ",(0,r.jsx)(n.code,{children:"json_object"})," and ",(0,r.jsx)(n.code,{children:"text"})," options of ",(0,r.jsx)(n.code,{children:"llm.response_format"})," is only supported by the OpenAI models later than 1106. If you are using an older version of OpenAI model, you need to set the ",(0,r.jsx)(n.code,{children:"llm.response_format"})," to ",(0,r.jsx)(n.code,{children:"null"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 Read ",(0,r.jsx)(n.a,{href:"/TaskWeaver/docs/compression",children:"this"})," for more information for ",(0,r.jsx)(n.code,{children:"planner.prompt_compression"})," and ",(0,r.jsx)(n.code,{children:"code_generator.prompt_compression"}),"."]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,n,d)=>{d.d(n,{Z:()=>i,a:()=>o});var r=d(7294);const s={},c=r.createContext(s);function o(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);