"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4288],{1469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var i=t(5893),o=t(1151);const s={},a="FAQ",r={id:"FAQ",title:"FAQ",description:"Q: How do I know if TaskWeaver can see my plugin?",source:"@site/docs/FAQ.md",sourceDirName:".",slug:"/FAQ",permalink:"/TaskWeaver/docs/FAQ",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/docs/FAQ.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Telemetry",permalink:"/TaskWeaver/docs/advanced/telemetry"}},l={},c=[];function h(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Q: How do I know if TaskWeaver can see my plugin?"})}),"\n",(0,i.jsx)(n.p,{children:'A: A simple way to check if TaskWeaver can see your plugin is to ask "What can you do?" to TaskWeaver.\nThe typical response is to list all the available plugins like the following:'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"I can assist you with various tasks, including:\n\n- Detecting anomalies in time series data.\n- Rendering text into ASCII art.\n- Searching and comparing prices from thousands of online shops (US only).\n- Telling a joke.\n\nIf you have a specific task in mind, please let me know, and I'll do my best to assist you.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you see your plugin in the list, it means TaskWeaver can see your plugin.\nBut this is not a reliable way to check if TaskWeaver can see your plugin because the response is generated by the LLM.\nA more reliable way is to check the prompt of the Planner. You can find the prompts\nfrom ",(0,i.jsx)(n.code,{children:"project/workspace/sessions/<session_id>/planner_prompt_log_xxxx.yaml"}),".\nThen, search for this section as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:'CodeInterpreter has the following plugin functions and their required parameters need to be provided before the execution:\n- anomaly_detection: anomaly_detection function identifies anomalies from an input DataFrame of time series. It will add a new column \\"Is_Anomaly\\", where each entry will be marked with \\"True\\" if the value is an anomaly or \\"False\\" otherwise. Arguments required: df: DataFrame, time_col_name: str, value_col_name: str\n- ascii_render: This plugin renders the input text into ASCII art form. Arguments required: text: str\n- klarna_search: Search and compare prices from thousands of online shops. Only available in the US. This plugin only takes user requests when searching for merchandise. If not clear, confirm with the user if they want to search for merchandise from Klarna. Arguments required: query: str\n- tell_joke: Call this plugin to tell a joke.\n'})}),"\n",(0,i.jsx)(n.p,{children:"Check if your plugin is in the list. If it is, it means TaskWeaver can see your plugin."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Q: Why TaskWeaver cannot see my plugin?"})}),"\n",(0,i.jsxs)(n.p,{children:["First, make sure you have read our ",(0,i.jsx)(n.a,{href:"https://microsoft.github.io/TaskWeaver/docs/plugin/plugin_intro",children:"Plugin Introduction"})," and this tutorial carefully.\nYou should have two files in the ",(0,i.jsx)(n.code,{children:"plugins"})," folder, e.g., ",(0,i.jsx)(n.code,{children:"ascii_render.py"})," and ",(0,i.jsx)(n.code,{children:"ascii_render.yaml"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Now, if TaskWeaver cannot see your plugin, the root cause is typically syntax errors in the yaml file.\nCheck the console output if you are using the command line interface, or the console logs if you are using the web interface.\nYou may see the following error message:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"failed to loading component from <name>.yaml, skipping: Yaml loading failed due to: <reason>\n"})}),"\n",(0,i.jsx)(n.p,{children:"The error message will tell you the reason why the yaml file cannot be loaded.\nIt is typically easy to fix the syntax errors by using a yaml linter (e.g., in Visual Studio Code) or an online yaml linter."}),"\n",(0,i.jsxs)(n.p,{children:["If you have checked the syntax of the yaml file and TaskWeaver still cannot see your plugin, please check\nif the yaml file has included all the required fields such as the ",(0,i.jsx)(n.code,{children:"parameters"})," and ",(0,i.jsx)(n.code,{children:"returns"})," fields."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Q: Why TaskWeaver can see my plugin but cannot call it?"})}),"\n",(0,i.jsx)(n.p,{children:"A: In this case, you may see the generated code has called the plugin function,\nbut the execution result is an error message saying that the plugin function is undefined.\nIf this happens, please check the console output if you are using the command line interface,\nor the console logs if you are using the web interface."}),"\n",(0,i.jsx)(n.p,{children:"You may see the following error message:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Plugin <name> failed to load: Plugin <name> failed to register: failed to load plugin <name> <reason>\n"})}),"\n",(0,i.jsx)(n.p,{children:"This error message will tell you the reason why the plugin function cannot be loaded.\nIt is typically easy to fix the errors by checking the console output or logs.\nThe root cause is typically errors in the python file that causes the plugin function cannot be loaded.\nTypical errors include syntax errors, missing imports, or missing packages."}),"\n",(0,i.jsx)(n.p,{children:'Note that this sort of error is not caused by the implementation "inside" the plugin function.\nOtherwise, the errors would be caught during the execution of the plugin function,\nnot during the loading of the plugin function.'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Q: How to debug my plugin?"})}),"\n",(0,i.jsxs)(n.p,{children:["A: We are working on a debugging tool to help you debug your plugin. For now, a simple way to debug your plugin is to\ndefine a main function in the python file and run it in your local environment.\nFor example, you can define a main function in ",(0,i.jsx)(n.code,{children:"ascii_render.py"})," as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'if __name__ == "__main__":\n    from taskweaver.plugin.context import temp_context\n\n    with temp_context() as temp_ctx:\n        render = AsciiRenderPlugin(name="ascii_render", ctx=temp_ctx, config={})\n        print(render(text="hello world!"))\n'})}),"\n",(0,i.jsx)(n.p,{children:"In this main function, we create a temporary context and call the plugin function with some input.\nYou need not change the plugin implementation. Just add the main function to the end of the python file.\nThen, run the python file in your local environment. If there are any errors, you can see them in the console output."}),"\n",(0,i.jsxs)(n.p,{children:["If you have the ",(0,i.jsx)(n.code,{children:"configurations"})," section in the yaml file, you can manually set the configurations in the ",(0,i.jsx)(n.code,{children:"config"})," parameter of the plugin constructor.\nWe currently do not read the yaml file, so you need to make sure that the configurations are set correctly in the ",(0,i.jsx)(n.code,{children:"config"})," parameter.\nFor example, if an integer configuration ",(0,i.jsx)(n.code,{children:"max_length"})," is defined in the yaml file, you can set it in the ",(0,i.jsx)(n.code,{children:"config"})," parameter as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'config = {\n    "max_length": 100\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Then, pass the ",(0,i.jsx)(n.code,{children:"config"})," to the plugin constructor. As yaml is type sensitive, you need to make sure that the type of the configuration is correct."]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var i=t(7294);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);