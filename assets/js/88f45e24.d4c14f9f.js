"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6417],{4559:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var t=n(5893),i=n(1151);const c={},s="Code Execution",r={id:"code_execution",title:"Code Execution",description:"TaskWeaver is a code-first agent framework, which means that it always converts the user request into code",source:"@site/docs/code_execution.md",sourceDirName:".",slug:"/code_execution",permalink:"/TaskWeaver/docs/code_execution",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/docs/code_execution.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Code Verification",permalink:"/TaskWeaver/docs/code_verification"},next:{title:"FAQ",permalink:"/TaskWeaver/docs/FAQ"}},a={},d=[{value:"Two Modes of Code Execution",id:"two-modes-of-code-execution",level:2},{value:"How to Configure the Code Execution Mode",id:"how-to-configure-the-code-execution-mode",level:2},{value:"Limitations of the <code>container</code> Mode",id:"limitations-of-the-container-mode",level:2}];function h(e){const o={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"code-execution",children:"Code Execution"}),"\n",(0,t.jsx)(o.p,{children:"TaskWeaver is a code-first agent framework, which means that it always converts the user request into code\nand executes the code to generate the response. In our current implementation, we use a Jupyter Kernel\nto execute the code. We choose Jupyter Kernel because it is a well-established tool for interactive computing,\nand it supports many programming languages."}),"\n",(0,t.jsx)(o.h2,{id:"two-modes-of-code-execution",children:"Two Modes of Code Execution"}),"\n",(0,t.jsxs)(o.p,{children:["TaskWeaver supports two modes of code execution: ",(0,t.jsx)(o.code,{children:"local"})," and ",(0,t.jsx)(o.code,{children:"container"}),".\nThe ",(0,t.jsx)(o.code,{children:"local"})," mode is the default mode. The key difference between the two modes is that the ",(0,t.jsx)(o.code,{children:"container"})," mode\nexecutes the code inside a Docker container, which provides a more secure environment for code execution, while\nthe ",(0,t.jsx)(o.code,{children:"local"})," mode executes the code as a subprocess of the TaskWeaver process.\nAs a result, in the ",(0,t.jsx)(o.code,{children:"local"})," mode, if the user has malicious intent, the user could potentially\ninstruct TaskWeaver to execute harmful code on the host machine. In addition, the LLM could also generate\nharmful code, leading to potential security risks."]}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:["\ud83d\udca1We recommend using the ",(0,t.jsx)(o.code,{children:"container"})," mode for code execution, especially when the usage of the agent\nis open to untrusted users. In the ",(0,t.jsx)(o.code,{children:"container"})," mode, the code is executed in a Docker container, which is isolated\nfrom the host machine."]}),"\n"]}),"\n",(0,t.jsx)(o.h2,{id:"how-to-configure-the-code-execution-mode",children:"How to Configure the Code Execution Mode"}),"\n",(0,t.jsxs)(o.p,{children:["To configure the code execution mode, you need to set the ",(0,t.jsx)(o.code,{children:"execution_service.kernel_mode"})," parameter in the\n",(0,t.jsx)(o.code,{children:"taskweaver_config.json"})," file. The value of the parameter could be ",(0,t.jsx)(o.code,{children:"local"})," or ",(0,t.jsx)(o.code,{children:"container"}),". The default value\nis ",(0,t.jsx)(o.code,{children:"local"}),"."]}),"\n",(0,t.jsxs)(o.p,{children:["TaskWeaver supports the ",(0,t.jsx)(o.code,{children:"local"})," mode without any additional setup. However, to use the ",(0,t.jsx)(o.code,{children:"container"})," mode,\nthere are a few prerequisites:"]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"Docker is installed on the host machine."}),"\n",(0,t.jsx)(o.li,{children:"A Docker image is built and available on the host machine for code execution."}),"\n",(0,t.jsxs)(o.li,{children:["The ",(0,t.jsx)(o.code,{children:"execution_service.kernel_mode"})," parameter is set to ",(0,t.jsx)(o.code,{children:"container"})," in the ",(0,t.jsx)(o.code,{children:"taskweaver_config.json"})," file."]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"Once the code repository is cloned to your local machine, you can build the Docker image\nby running the following command in the root directory of the code repository:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"cd scripts\n\n# based on your OS\n./build.ps1 # for Windows\n./build.sh # for Linux or macOS\n"})}),"\n",(0,t.jsxs)(o.p,{children:["After the Docker image is built, you can run ",(0,t.jsx)(o.code,{children:"docker images"})," to check if a Docker image\nnamed ",(0,t.jsx)(o.code,{children:"executor_container"})," is available.\nIf the prerequisite is met, you can now run TaskWeaver in the ",(0,t.jsx)(o.code,{children:"container"})," mode."]}),"\n",(0,t.jsxs)(o.p,{children:["After running TaskWeaver in the ",(0,t.jsx)(o.code,{children:"container"})," mode, you can check if the container is running by running ",(0,t.jsx)(o.code,{children:"docker ps"}),".\nYou should see a container of image ",(0,t.jsx)(o.code,{children:"taskweaver/executor"})," running after executing some code."]}),"\n",(0,t.jsxs)(o.h2,{id:"limitations-of-the-container-mode",children:["Limitations of the ",(0,t.jsx)(o.code,{children:"container"})," Mode"]}),"\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"container"})," mode is more secure than the ",(0,t.jsx)(o.code,{children:"local"})," mode, but it also has some limitations:"]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["The startup time of the ",(0,t.jsx)(o.code,{children:"container"})," mode is longer than the ",(0,t.jsx)(o.code,{children:"local"})," mode, because it needs to start a Docker container."]}),"\n",(0,t.jsxs)(o.li,{children:["As the Jupyter Kernel is running inside a Docker container, it has limited access to the host machine. We are mapping the\n",(0,t.jsx)(o.code,{children:"project/workspace/sessions/<session_id>"})," directory to the container, so the code executed in the container can access the\nfiles in it. One implication of this is that the user cannot ask the agent to load a file from the host machine, because the\nfile is not available in the container. Instead, the user needs to upload the file either using the ",(0,t.jsx)(o.code,{children:"/upload"})," command in\nthe console or the ",(0,t.jsx)(o.code,{children:"upload"})," button in the web interface."]}),"\n",(0,t.jsxs)(o.li,{children:["We have installed required packages in the Docker image to run the Jupyter Kernel. If the user needs to use a package that is\nnot available in the Docker image, the user needs to add the package to the Dockerfile (at ",(0,t.jsx)(o.code,{children:"TaskWeaver/ces_container/Dockerfile"}),")\nand rebuild the Docker image."]}),"\n"]})]})}function l(e={}){const{wrapper:o}={...(0,i.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,o,n)=>{n.d(o,{Z:()=>r,a:()=>s});var t=n(7294);const i={},c=t.createContext(i);function s(e){const o=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(c.Provider,{value:o},e.children)}}}]);